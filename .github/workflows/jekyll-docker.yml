name: Docker build and push CI

on:
  push:
    paths:
      - "api-service/**"
      - "internal-pypi/**"

    branches:
      - main
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  DOCKER_IMAGE_API_SERVICE: ghcr.io/${{ github.repository }}/api-service
  DOCKER_IMAGE_PYPI_SERVICE: ghcr.io/${{ github.repository }}/internal-pypi
  API_SERVICE_VERSION: "0.0.1"
  PYPI_SERVICE_VERSION: "0.0.1"
jobs:
  # This workflow contains a single job called "build"
  build-goapp:
    name: Build and push docker image
    # The type of runner that the job will run on

    runs-on: ubuntu-latest
    outputs:
      commit: ${{ steps.push-image.outputs.commit }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: docker version and build api_service
        run: |
          cd api-service
          docker -v
          docker build --build-arg BUILD_REF=$API_SERVICE_VERSION --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"`  . -f zarf/docker/Dockerfile.service -t $DOCKER_IMAGE_API_SERVICE
          docker images -a
      - name: Scan api_service image with Trivy
        run: |
          trivy image --format json --output trivy-report.json $DOCKER_IMAGE_API_SERVICE

      - name: Patch api_service image with Copacetic
        run: |
          copa patch --image $DOCKER_IMAGE_API_SERVICE --report trivy-report.json

      - name: docker version and build pypi_service
        run: |
          cd internal-pypi
          docker -v
          docker build --build-arg BUILD_REF=$PYPI_SERVICE_VERSION --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"`  . -f Dockerfile -t $DOCKER_IMAGE_PYPI_SERVICE
          docker images -a

      - name: Scan pypi_service image with Trivy
        run: |
          trivy image --format json --output trivy-report.json $DOCKER_IMAGE_PYPI_SERVICE

      - name: Patch pypi_service image with Copacetic
        run: |
          copa patch --image $DOCKER_IMAGE_PYPI_SERVICE --report trivy-report.json

      - if: github.event_name != 'pull_request'
        name: docker login and push
        id: push-image
        run: |
          echo "${{ github.token }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

          docker tag $DOCKER_IMAGE_API_SERVICE $DOCKER_IMAGE_API_SERVICE:$API_SERVICE_VERSION 
          docker push $DOCKER_IMAGE_API_SERVICE:$API_SERVICE_VERSION

          docker tag $DOCKER_IMAGE_PYPI_SERVICE $DOCKER_IMAGE_PYPI_SERVICE:$PYPI_SERVICE_VERSION
          docker push $DOCKER_IMAGE_PYPI_SERVICE:$PYPI_SERVICE_VERSION
