name: Build and Push

on:
  workflow_call:
    inputs:
      docker_image_name:
        required: true
        type: string
      version:
        required: true
        type: string
      folder:
        required: true
        type: string
      name:
        required: false
        type: string
        default: ""

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    name: ${{ inputs.name }}
    steps:
      - uses: actions/checkout@v3

      - name: Docker version and build
        run: |
          cd ${{ inputs.folder }}
          ls -l
          docker -v
          docker build --build-arg BUILD_REF=${{ inputs.version }} --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` . -f Dockerfile -t ${{ inputs.docker_image_name }}
          docker images -a

      - if: github.event_name != 'pull_request'
        name: Docker login and push
        run: |
          echo "${{ github.token }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker tag ${{ inputs.docker_image_name }} ${{ inputs.docker_image_name }}:${{ inputs.version }}
          docker push ${{ inputs.docker_image_name }}:${{ inputs.version }}

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ${{ inputs.docker_image_name }}:${{ inputs.version }}
          format: "json"
          output: "trivy-report.json"
          exit-code: "0"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"

      - name: Check for vulnerabilities
        id: check_vulnerabilities
        run: |
          if [ ! -s trivy-report.json ]; then
            echo "No vulnerabilities found (report is empty)."
            echo "skip_copa=true" >> $GITHUB_ENV
          else
            VULNERABILITIES_COUNT=$(jq '.Results[].Vulnerabilities | length' trivy-report.json | awk '{s+=$1} END {print s}')
            if [ "$VULNERABILITIES_COUNT" -eq 0 ]; then
              echo "No vulnerabilities found."
              echo "skip_copa=true" >> $GITHUB_ENV
            else
              echo "Vulnerabilities found: $VULNERABILITIES_COUNT"
              echo "skip_copa=false" >> $GITHUB_ENV
            fi
          fi

      - name: Patch images with copacetic
        if: env.skip_copa == 'false'
        uses: project-copacetic/copa-action@main
        with:
          image: ${{ inputs.docker_image_name }}:${{ inputs.version }}
          image-report: "trivy-report.json"
          patched-tag: "pypi-image-patched"
          copa-version: "0.7.0"
          buildkit-version: "latest"
        id: patch_image
        continue-on-error: true

      - name: Handle patching results
        run: |
          if [ "${{ steps.patch_image.outcome }}" == "success" ]; then
            echo "Patching was successful."
            echo "push_docker_patch=true" >> $GITHUB_ENV
          else
            echo "Patching encountered issues or no patchable vulnerabilities were found."
            echo "push_docker_patch=false" >> $GITHUB_ENV
          fi

      - name: docker login and push
        id: push-patched-image
        run: |
          echo "${{ github.token }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          if [ "${{ env.push_docker_patch }}" == "false" ]; then
            docker tag ${{ inputs.docker_image_name }} ${{ inputs.docker_image_name }}:${{ inputs.version }}
            docker push ${{ inputs.docker_image_name }}:${{ inputs.version }}
          else 
            docker tag ${{ inputs.docker_image_name}}-patched ${{ inputs.docker_image_name }}:${{ inputs.version }}
            docker push ${{ inputs.docker_image_name }}:${{ inputs.version }}
          fi
